#!/bin/bash

########################################
# Preliminary data setup step
########################################
set -x


##################################################
# SENDMAIL - Send Email Alerts When Missing Data
# SENDECF  - Flag Events on ecFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
##################################################
export SENDMAIL=${SENDMAIL:-NO}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-YES}


####################################
# SET SHELL PROCESSING VARIABLES
####################################
export PS4='$SECONDS + '
date


###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$
export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
rm -rf $DATA
mkdir -p $DATA
cd $DATA


####################################
# Determine Job Output Name on System
####################################


####################################
# Set EVS directories
####################################
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/${NET}.${evs_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export SCRIPTSevs=${SCRIPTSevs:-$HOMEevs/scripts}
export USHevs=${USHevs:-$HOMEevs/ush}
export MASKS=${MASKS:-$FIXevs/masks}


####################################
# Run setpdy and initialize PDY variables
####################################
export cycle=${cycle:-t${vhr}z}
setpdy.sh 8
. ./PDY

if [ $VERIF_CASE = grid2obs ] ; then
    export VDATE=${VDATE:-$PDYm1}

elif [ $VERIF_CASE = precip ] ; then
    export VDATE=${VDATE:-$PDYm2}

elif [ $VERIF_CASE = radar ] ; then
    export VDATE=${VDATE:-$PDYm1}

elif [ $VERIF_CASE = snowfall ] ; then
    export VDATE=${VDATE:-$PDYm2}

elif [ $VERIF_CASE = severe ] ; then
   export VDATE=${VDATE:-$PDYm7}

   # Set correct date for SPC report data (set relative to VDATE) 
   export REP_DATE=$(finddate.sh $VDATE d-1)

elif [ $VERIF_CASE = spcoutlook ] ; then
   #for HREF grid2obs SPC outlook 
   export VDATE=${VDATE:-$PDYm1}

else

   err_exit "The provided VERIF_CASE, $VERIF_CASE, is not supported for the $COMPONENT $STEP step"

fi


####################################
# Define NET/RUN variables
####################################
export NET=${NET:-evs}
export STEP=${STEP:-stats}
export COMPONENT=${COMPONENT:-cam}
export RUN=${RUN:-atmos}


####################################
# Define METplus variables
####################################
export MET_PLUS_CONF="${PARMevs}/metplus_config/${STEP}/${COMPONENT}/${VERIF_CASE}"


####################################
# Define COMIN/COMOUT variables
####################################
export COMIN=${COMIN:-$(compath.py $envir/com/$NET/$evs_ver)}
export COMINhiresw=${COMINhiresw:-$(compath.py $envir/com/hiresw/$hiresw_ver)}
export COMINhref=${COMINhref:-$(compath.py $envir/com/href/$href_ver)}
export COMINhrrr=${COMINhrrr:-$(compath.py $envir/com/hrrr/$hrrr_ver)}
export COMINnam=${COMINnam:-$(compath.py $envir/com/nam/$nam_ver)}
export COMINobsproc=${COMINobsproc:-$(compath.py $envir/com/obsproc/$obsproc_ver)}
export COMINccpa=${COMINccpa:-$(compath.py $envir/com/ccpa/$ccpa_ver)}
export DCOMINmrms=${DCOMINmrms:-$DCOMROOT/ldmdata/obs/upperair/mrms/alaska/MultiSensorQPE}
export DCOMINsnow=${DCOMINsnow:-$DCOMROOT}
export EVSINccpa=${EVSINccpa:-$COMIN/prep/$COMPONENT}
export EVSINmrms=${EVSINmrms:-$COMIN/prep/$COMPONENT}
export EVSINspcotlk=${EVSINspcotlk:-$COMIN/prep/$COMPONENT}
export EVSINfcst=${EVSINfcst:-$COMIN/prep/$COMPONENT}
export EVSINspclsr=${EVSINspclsr:-$COMIN/prep/$COMPONENT}

export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT)}

mkdir -p $COMOUT

export COMOUTfinal=${COMOUT}/${MODELNAME}.${VDATE}
export COMOUTsmall=${COMOUT}/${RUN}.${VDATE}/${MODELNAME}/${VERIF_CASE}
if [ $VERIF_CASE = severe ]; then
   mkdir -p $COMOUTfinal
else
   mkdir -p $COMOUTfinal $COMOUTsmall


####################################
# Execute the script 
####################################
if [ $VERIF_CASE = radar ] || [ $VERIF_CASE = severe ]; then
   $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${VERIF_CASE}_${STEP}.sh
elif [ $MODELNAME = nam_firewxnest ]; then
   $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${MODELNAME}_${VERIF_CASE}_${STEP}.sh
else
   $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${MODELNAME}_${VERIF_CASE}_${STEP}.sh
fi

export err=$?; err_chk

if [ "$KEEPDATA" != "YES" ]; then
   cd $DATAROOT
   rm -rf $DATA
fi

date
