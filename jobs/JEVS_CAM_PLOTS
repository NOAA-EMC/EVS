#!/bin/bash

########################################
# Preliminary data setup step
########################################
set -x

#####################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + '
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$

export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
rm -rf $DATA
mkdir -p $DATA
cd $DATA


####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.${pid}"


####################################
# Set EVS directories
####################################
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs.${evs_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export SCRIPTSevs=${SCRIPTSevs:-$HOMEevs/scripts}
export USHevs=${USHevs:-$HOMEevs/ush}
export cartopyDataDir=${cartopyDataDir:-/apps/ops/prod/data/cartopy}


##################################################
# SENDMAIL - Send Email Alerts When Missing Data
# SENDECF  - Flag Events on ecFLOW
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
##################################################
export SENDMAIL=${SENDMAIL:-NO}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-YES}


####################################
# Run setpdy and initialize PDY variables
####################################
export cycle=${cycle:-t${cyc}z}
setpdy.sh 31
. ./PDY

if [ $MODELNAME = href ] ; then
   export VDATE=${VDATE:-$PDYm2}
   export INITDATE=${INITDATE:-$PDYm2}
else
   if [ $VERIF_CASE = severe ] ; then
      export VDATE=${VDATE:-$PDYm7}
   elif [ $VERIF_CASE = radar ] ; then
      export VDATE=${VDATE:-$PDYm2}
   else
      export VDATE=${VDATE:-$PDYm1}
   fi
fi


####################################
# Define COMIN/COMOUT variables
####################################
export COMROOT=${COMROOT:-$(compath.py $envir/com)}

if  [ $MODELNAME = href ] ; then
  export COMIN=${COMIN:-$(compath.py  $envir/com/$NET/$evs_ver)}/stats/$COMPONENT/$MODELNAME.$VDATE
  export COMOUT=${COMOUT:-$(compath.py -o $envir/com/$NET/${evs_ver})}/$STEP/$COMPONENT/$RUN.$VDATE
  export COMINapcp24mean=${COMINapcp24mean:-$(compath.py  $envir/com/$NET/$evs_ver)}/stats/$COMPONENT
  export DATA_IN=${DATA_IN:-$DATAROOT}
  export ush_dir=$USHevs/cam/ush_href_plot_py
else
  export COMIN=${COMIN:-$(compath.py -o $NET/$evs_ver)}
  export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT)}
  export COMOUTplots=${COMOUTplots:-$COMOUT/$RUN.$VDATE}
  echo $COMPATH
fi

mkdir -p $COMOUT $COMOUTplots

echo $COMPATH


#######################################################################
# Execute the script.
#######################################################################

if [ $MODELNAME = nam_firewxnest ]; then
 $HOMEevs/scripts/${COMPONENT}/${STEP}/exevs_${COMPONENT}_${MODELNAME}_${VERIF_CASE}_${STEP}.sh
else
 $HOMEevs/scripts/${COMPONENT}/${STEP}/exevs_${MODELNAME}_${VERIF_CASE}_${STEP}.sh
fi
export err=$?; err_chk

if [ -e "$pgmout" ]; then
   cat $pgmout
fi

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

date
