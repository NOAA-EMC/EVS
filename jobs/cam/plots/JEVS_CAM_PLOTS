#!/bin/bash

set -xa
<<<<<<< HEAD
#######################################################
#######################################################
=======

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + '
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$

export DATA=${DATA:-${DATAROOT:?}}/${jobid:?}
rm -rf $DATA
mkdir -p $DATA
cd $DATA

####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.${pid}"
>>>>>>> upstream/develop

export cycle=t${cyc}z

export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}

<<<<<<< HEAD
export pid=$$
jobid=evs_${RUN}_${COMPONENT}_${VERIF_CASE}_${STEP}.$$
export DATA=$DATA_IN/$jobid
mkdir -p $DATA
cd $DATA

setpdy.sh
. $DATA/PDY

if [ $MODELNAME = href ] ; then
  export VDATE=${VDATE:-$PDYm2}
fi

export COMIN=${COMIN:-$(compath.py  $envir/com/$NET/$evs_ver)}/stats/$COMPONENT/$MODELNAME.$VDATE
export COMOUT=${COMOUT:-$(compath.py -o $envir/com/$NET/${evs_ver})}/$STEP/$COMPONENT/$RUN.$VDATE
export COMINapcp24mean=${COMINspatial:-$(compath.py  $envir/com/$NET/$evs_ver)}/stats/$COMPONENT
export DATA_IN=${DATA_IN:-$DATAROOT}
mkdir -p $COMOUT
=======
export DCOMROOT=${DCOMROOT:-/lfs/h1/ops/$envir/dcom}
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs.${model_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}

if [[ ${COMPONENT} == "cam" ]]; then
    export VDATE=$(date -d "today -1 day" +"%Y%m%d")
else
    setpdy.sh 31
    . ./PDY
    export VDATE=$PDYm1
fi

# Define COMIN/COMOUT variables:
export cartopyDataDir=${cartopyDataDir:-/apps/ops/prod/data/cartopy}
export COMIN=${COMIN:-$(compath.py -o $NET/$evs_ver)}
export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT/$RUN)}
>>>>>>> upstream/develop

export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs_gens.${evs_ver}}
export EXECevs=$HOMEevs/exec
export PARMevs=$HOMEevs/parm
export USHevs=$HOMEevs/ush
export SCRIPTevs=$HOMEevs/scripts
export FIXevs=${FIXevs:-$HOMEevs/fix}

<<<<<<< HEAD
#export ush_dir=/lfs/h2/emc/vpppg/noscrub/binbin.zhou/EVS_plots/verif_plotting/ush
export ush_dir=$USHevs/cam/ush_href_plot_py

=======
#######################################################################
# Execute the script.
#######################################################################
>>>>>>> upstream/develop

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

# Run setpdy and initialize PDY variables
setpdy.sh
. $DATA/PDY

if [ $RUN = atmos ] ; then
  export INITDATE=${INITDATE:-$PDYm2}
fi

sh $HOMEevs/scripts/${COMPONENT}/${STEP}/exevs_${COMPONENT}_${MODELNAME}_${VERIF_CASE}_${STEP}.sh

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

date

<<<<<<< HEAD
=======

>>>>>>> upstream/develop
