#!/bin/bash

set -x

export PS4='$SECONDS + '
date

# Version of MET listed in the metplus .stat files used to create graphics
# Because Python code will convert it to a float variable,
# keep at most one dot(.) and remove extra from MET_VERSION.
export MET_VERSION=`echo $MET_VERSION | sed "s/\([^.]*\.[^.]*\)\..*/\1/g"`

############################################
# Set data directives
############################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDMAIL=${SENDMAIL:-NO}

############################################
# Working Directory                                                                                                                                      
############################################
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
mkdir -p $DATA
cd $DATA

############################################
# Determine Job Output Name on System
############################################
export pid=$$

############################################
# Initialize PDY variables
############################################
export vhr=${vhr:-00}
export cycle=t${vhr}z

#It needs $DATA and $cycle to be set
setpdy.sh
. ./PDY

# Don't specify $VDATE to be flexible to both data preparation and MET stat input
export VDATE=${VDATE:-$PDYm1}

############################################
# Set up the NET and RUN                                                                                                                         
############################################
export NET=${NET:-evs}
export STEP=${STEP:-plots} # prep stats plot
export COMPONENT=${COMPONENT:-wafs}
export RUN=${RUN:-atmos}
export VERIF_CASE=${VERIF_CASE:-grid2grid}

# WAFS is the general MODELNAME for data structure
# while the center (us/uk/blend or gfs) will be the actual MODEL
export MODELNAME=${MODELNAME:-wafs}

############################################
# Set up the INPUT and OUTPUT directories
############################################

# COMIN folder of analysis and forecast grib2 data
# gfs_ver defined in versions/run.ver
export COMIN=${COMIN:-$(compath.py ${envir}/com/${NET}/${evs_ver})}

# COMOUT folder
# evs_ver defined in versions/run.ver
export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${evs_ver})/$STEP/$COMPONENT/$RUN.$VDATE}
mkdir -p $COMOUT

############################################
# Specify HOME Directory
############################################

export HOMEevs=${HOMEevs:-$PACKAGEROOT/$NET.$evs_ver}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export SCRIPTSevs=${SCRIPTSevs:-$HOMEevs/scripts/$STEP/$COMPONENT}
export JOBSevs=${JOBSevs:-$HOMEevs/jobs}
export PARMevs=${PARMevs:-$HOMEevs/parm/metplus_config/$STEP/$COMPONENT/$RUN}
export USHevs=${USHevs:-$HOMEevs/ush/$COMPONENT} # all pool

export MASKS=${MASKS:-$FIXevs/masks}

# To integrate plotting python scripts from Marcel Caron
export USH_DIR=${USH_DIR:-$HOMEevs/ush/$COMPONENT}

############################################
# Execute the script.
############################################
export DAYS_LIST=${DAYS_LIST:-"90 31"}
$SCRIPTSevs/exevs_wafs_atmos_plots.sh

export err=$?; err_chk

echo "JOB $job HAS COMPLETED NORMALLY."

if [ "$KEEPDATA" != "YES" ] ; then
  rm -rf $DATA
fi

date

