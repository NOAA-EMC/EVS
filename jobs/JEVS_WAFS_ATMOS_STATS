#!/bin/bash

set -x

export PS4='$SECONDS + '
date

############################################
# Set data directives
############################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDMAIL=${SENDMAIL:-NO}

############################################
# Working Directory                                                                                                                                      
############################################
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
mkdir -p $DATA
cd $DATA

############################################
# Determine Job Output Name on System
############################################
export pid=$$

############################################
# Initialize PDY variables
############################################
export vhr=${vhr:-00}
export cycle=t${vhr}z

#It needs $DATA and $cycle to be set
setpdy.sh
. ./PDY

# Don't specify $VDATE to be flexible to both data preparation and MET stat input
export VDATE=${VDATE:-$PDYm1}

############################################
# Set up the NET and RUN                                                                                                                         
############################################
export NET=${NET:-evs}
export STEP=${STEP:-stats} # prep stats plot
export COMPONENT=${COMPONENT:-wafs}
export RUN=${RUN:-atmos}
export VERIF_CASE=${VERIF_CASE:-grid2grid}

# WAFS is the general MODELNAME for data structure
# while the center (us/uk/blend or gfs) will be the actual MODEL
# parm/metplus_config/wafs/atmos/stats/GridStat_fcstWAFS_obsGCIP.conf
# parm/metplus_config/wafs/atmos/stats/StatAnalysis_fcstWAFS_obsGCIP_GatherbyDay.conf
export MODELNAME=${MODELNAME:-wafs}

############################################
# Set up the INPUT and OUTPUT directories
############################################

# COMIN folder of analysis and forecast grib2 data
# gfs_ver defined in versions/run.ver
export COMIN=${COMIN:-$(compath.py ${envir}/com/${NET}/${evs_ver})}
export COMINuk=${COMINuk:-$DCOMROOT} # $VDATE/wgrbbul/ukmet_wafs}
export COMINgfs=${COMINgfs:-$(compath.py gfs/${gfs_ver})}
export COMINobs=$COMINgfs

# COMOUT folder
# evs_ver defined in versions/run.ver
export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${evs_ver})}
export COMOUTsmall=$COMOUT/$STEP/$COMPONENT/$RUN.$VDATE/$MODELNAME/$VERIF_CASE
export COMOUTfinal=$COMOUT/$STEP/$COMPONENT/$MODELNAME.$VDATE

if [ $SENDCOM = YES ] ; then
    mkdir -p $COMOUTsmall $COMOUTfinal
fi

############################################
# Specify HOME Directory
############################################

export HOMEevs=${HOMEevs:-$PACKAGEROOT/$NET.$evs_ver}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export SCRIPTSevs=${SCRIPTSevs:-$HOMEevs/scripts/$STEP/$COMPONENT}
export JOBSevs=${JOBSevs:-$HOMEevs/jobs}
export PARMevs=${PARMevs:-$HOMEevs/parm/metplus_config/$STEP/$COMPONENT/$RUN}
export USHevs=${USHevs:-$HOMEevs/ush/$COMPONENT} # all pool

export MACHINE_CONF=$HOMEevs/parm/metplus_config/machine.conf

export MASKS=${MASKS:-$FIXevs/masks}

############################################
# Execute the script using MPMD
############################################
$SCRIPTSevs/exevs_wafs_atmos_stats.sh
export err=$?; err_chk

echo "JOB $job HAS COMPLETED NORMALLY!"

if [ "$KEEPDATA" != "YES" ] ; then
  rm -rf $DATA
fi

date

