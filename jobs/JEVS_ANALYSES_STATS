#!/bin/ksh

########################################
# Preliminary data setup step
########################################
set -x

##################################################
### SAVEGES  - Copy Files From TMPDIR to $GESdir
### SENDECF  - Flag Events on ecFLOW
### SENDCOM  - Copy Files From TMPDIR to $COMOUT
### SENDDBN  - Issue DBNet Client Calls
### SENDMAIL - Send email if file is missing
###################################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDECF=${SENDECF:-YES}
export SENDMAIL=${SENDMAIL:-NO}

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + '
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
mkdir -p $DATA
cd $DATA

####################################
## Set EVS directories
#####################################
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs.${evs_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export SCRIPTSevs=${SCRIPTSevs:-$HOMEevs/scripts}
export USHevs=${USHevs:-$HOMEevs/ush}
export MASKS=${MASKS:-$FIXevs/masks}

# Run setpdy and initialize PDY variables
export vhr=${vhr:-00}
export cycle=t${vhr}z
setpdy.sh
. ./PDY

export VDATE=${VDATE:-$PDYm1}

####################################
## Define NET/RUN variables
#####################################
export NET=${NET:-evs}
export STEP=${STEP:-stats}
export COMPONENT=${COMPONENT:-analyses}
export RUN=${RUN:-atmos}

# Define COMIN/COMOUT variables:

echo $COMPATH
if [ "$modsys" = "urma" ] ; then
  mod_ver=$urma_ver
fi
if [ "$modsys" = "rtma" ] ; then
  mod_ver=$rtma_ver
fi
export COMIN=${COMIN:-$(compath.py ${envir}/com/${NET}/$evs_ver)}
export COMINanl=${COMINanl:-$(compath.py ${envir}/com/${modsys}/${mod_ver})}
export COMINobsproc=${COMINobs:-$(compath.py ${envir}/com/obsproc/${obsproc_ver})}
export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${evs_ver})}
mkdir -p $COMOUT
export COMOUTsmall=${COMOUT}/${STEP}/${COMPONENT}/${RUN}.${VDATE}/${MODELNAME}/${VERIF_CASE}
export COMOUTfinal=${COMOUT}/${STEP}/${COMPONENT}/${MODELNAME}.${VDATE}
mkdir -p $COMOUTsmall $COMOUTfinal

#######################################################################
# Execute the script.
#######################################################################

$HOMEevs/scripts/$STEP/${COMPONENT}/exevs_${COMPONENT}_${MODELNAME}_${VERIF_CASE}_${STEP}.sh

export err=$?; err_chk

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

date
