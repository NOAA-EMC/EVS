#!/bin/bash

########################################
# Preliminary data setup step
########################################
set -x

####################################
# SET SHELL PROCESSING VARIABLES
####################################
export PS4='$SECONDS + '
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$
export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
mkdir -p $DATA
cd $DATA

####################################
# Define NET/RUN variables
####################################
export NET=${NET:-evs}
export STEP=${STEP:-stats}
export COMPONENT=${COMPONENT:-global_det}
export RUN=${RUN:-atmos}
export machine=${machine:-WCOSS2}
export evs_run_mode=${evs_run_mode:-production}
if [ $VERIF_CASE = wmo ]; then
    export temporal=${temporal:-daily}
fi

####################################
# Set EVS directories
####################################
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/${NET}.${evs_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}

####################################
# Run setpdy and initialize PDY variables
####################################
export vhr=${vhr:-00}
export cycle=${cycle:-t${vhr}z}
setpdy.sh
. ./PDY
export VDATE=${VDATE:-$PDYm1}

####################################
# Set data directives
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDMAIL=${SENDMAIL:-NO}

####################################
# Define COMIN/COMOUT variables
####################################
export COMIN=${COMIN:-$(compath.py ${envir}/com/$NET/$evs_ver)}
export COMINgfs=${COMINgfs:-$(compath.py $envir/gfs/$gfs_ver)}
export COMINccpa=${COMINccpa:-$(compath.py $envir/ccpa/$ccpa_ver)}
export COMINobsproc=${COMINobsproc:-$(compath.py $envir/obsproc/$obsproc_ver)}
export DCOMINnohrsc=${DCOMINnohrsc:-$DCOMROOT}
export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT)}
export COMOUTsmall=$COMOUT/$RUN.$VDATE/$MODELNAME/$VERIF_CASE
export COMOUTfinal=$COMOUT/$MODELNAME.$VDATE
mkdir -p $COMOUT $COMOUTsmall $COMOUTfinal

#######################################################################
# Execute the script
#######################################################################
env
if [ $VERIF_CASE = wmo ] ; then
    if [ $temporal = monthly ]; then
        VDATEm1=$(finddate.sh $VDATE d+1)
        VDATEm1_mm=$(echo $VDATEm1 | cut -c7-8)
        if [ $VDATEm1_mm = 01 ]; then
            VDATE_YYYYmm=$(echo $VDATE | cut -c1-6)
            echo "Generating monthly report for $VDATE_YYYYmm"
            $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${RUN}_${VERIF_CASE}_${STEP}.sh
            export err=$?; err_chk
        else
            echo "Not generating monthly report"
        fi
    else
        $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${RUN}_${VERIF_CASE}_${STEP}.sh
        export err=$?; err_chk
    fi
else
    $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${RUN}_${VERIF_CASE}_${STEP}.sh
    export err=$?; err_chk
fi

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

date
