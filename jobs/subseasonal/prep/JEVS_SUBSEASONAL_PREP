#!/bin/bash

set -xa

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

export machine="WCOSS2"

###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################
export pid=$$
#export DATA_IN=${DATA_IN:-$DATAROOT}
export DATA_IN=${DATA_IN:-$DATAROOTtmp}
export DATA=$DATA_IN/${pid}


#rm -rf $DATA_IN
mkdir -p $DATA
cd $DATA 

###############################
# Determine Job Output Name on System
###############################
export pgmout="OUTPUT.${pid}" 

################################################################
# SENDCOM=YES--Copy files from TMPDIR to $COMOUT
# SENDECF=YES--Flag events on ecflow
# SENDDBN=YES--Issue DBNet client calls
################################################################
export SENDCOM=${SENDCOM:-NO}
export SENDDBN=${SENDDBN:-NO}       # need to set to NO for testing
export SENDECF=${SENDECF:-NO}
export SENDDBN_NTC=${SENDDBN_NTC:-NO}
################################################################
# Specify Execution Areas
################################################################
export DCOMROOT=${DCOMROOT:-/lfs/h1/ops/$envir/dcom}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}
export FIXevs=${FIXevs:-$HOMEevs/fix}

export gefs_members="30"

export cfs_members="4"

###################################
# Set up the UTILITIES
###################################
# for wwgrib: find the path of wgrib2: 
#export WGRIBpath=`echo $WGRIB | sed 's/\/wgrib//'`


# Run setpdy and initialize PDY variables
export cycle=${cycle:-t${cyc}z}
setpdy.sh
. ./PDY

export INITDATE=$PDYm2

#################################################
# Set up the INPUT and OUTPUT directories
#################################################
#export COMIN=${COMIN:-$(compath.py ${envir}/com/${NET}/${evs_ver})}
export COMINgefs=${COMINgefs:-$(compath.py ${envir}/com/gefs/${gefs_ver}/gefs.$INITDATE)}
#export COMINgefs=${COMINgefs:-$(compath.py ${envir}/com/gefs/${gefs_ver}/gefs)}
export COMINcfs=${COMINcfs:-$(compath.py ${envir}/com/cfs/${cfs_ver}/cfs.$INITDATE)}
export COMINgfs=${COMINgfs:-$(compath.py ${envir}/com/gfs/${gfs_ver})}
export COMINecmwf=$DCOMROOT
export COMINccpa=${COMINccpa:-$(compath.py ${envir}/com/ccpa/${ccpa_ver})}
export COMINmrmsak=$DCOMROOT/ldmdata/obs/upperair/mrms/alaska/MultiSensorQPE
export COMINmrmshi=$DCOMROOT/ldmdata/obs/upperair/mrms/hawaii/MultiSensorQPE
export COMINosi=${COMINosi:-/lfs/h1/ops/dev/dcom}
export COMINghrsst=${COMINghrsst:-/lfs/h1/ops/dev/dcom}
export COMINumd=${COMINumd:-/lfs/h1/ops/dev/dcom}
export COMINnam=${COMINnam:-$(compath.py ${envir}/com/obsproc/${obsproc_ver})}
export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT/$RUN.$INITDATE)}


echo Actual output starts here

################################################
# Run the config file to set up model variables
################################################
. $PARMevs/evs_config/$COMPONENT/config.evs.$COMPONENT.$STEP

#######################################################################
# Execute the script.
#######################################################################
$HOMEevs/scripts/$COMPONENT/$STEP/exevs_${COMPONENT}_${STEP}.sh
export err=$?; err_chk

cat $pgmout

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOTtmp
  rm -rf $DATA
fi

date

