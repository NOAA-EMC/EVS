#!/bin/bash

set -xa

# ###################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

export machine="WCOSS2"

###########################################################
# obtain unique process id (pid) and make temp directories
###########################################################
export pid=$$
#export DATA_IN=${DATA_IN:-$DATAROOT}
export DATA_IN=${DATA_IN:-$DATAROOTtmp}
export DATA=$DATA_IN/${pid}


rm -rf $DATA
mkdir -p $DATA
cd $DATA 

###############################
# Determine Job Output Name on System
###############################
export pgmout="OUTPUT.${pid}"

#export cycle=t${cyc}z 

################################################################
# SENDCOM=YES--Copy files from TMPDIR to $COMOUT
# SENDECF=YES--Flag events on ecflow
# SENDDBN=YES--Issue DBNet client calls
################################################################
export SENDCOM=${SENDCOM:-NO}
export SENDDBN=${SENDDBN:-NO}       # need to set to NO for testing
export SENDECF=${SENDECF:-NO}
export SENDDBN_NTC=${SENDDBN_NTC:-NO}
################################################################
# Specify Execution Areas
################################################################
export DCOMROOT=${DCOMROOT:-/lfs/h1/ops/$envir/dcom}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}
#export FIXevs=${FIXevs:-$HOMEevs/fix}
export FIXevs=${FIXevs:-/lfs/h2/emc/vpppg/noscrub/emc.vpppg/verification/EVS_fix}
#export HOMEMET=${HOMEMET}
#export HOMEMETplus=${HOMEMETplus}
#export PARMMETplus=${PARMMETplus:-$HOMEMETplus/parm}
#export USHMETplus=${USHMETplus:-$HOMEMETplus/ush}
#export PATH="${USHMETplus}:${PATH}"
#export PYTHONPATH="${USHMETplus}:${PYTHONPATH}"

###################################
# Set up the UTILITIES
###################################
# for wwgrib: find the path of wgrib2: 
#export WGRIBpath=`echo $WGRIB | sed 's/\/wgrib//'`


# Run setpdy and initialize PDY variables
#setpdy.sh
#. ./PDY

#export vday=$PDYm1
export VDATE=$(date -d "today -1 day" +"%Y%m%d")

#################################################
# Set up the INPUT and OUTPUT directories
#################################################
#export COMIN=${COMIN:-$(compath.py ${envir}/com/${NET}/${evs_ver})}
#export COMINgefs=$COMIN/stats/$COMPONENT/$MODELNAME
export COMINgefs=/lfs/h2/emc/ptmp/$USER/stats/$COMPONENT/$MODELNAME
#export COMINcfs=$COMIN/stats/$COMPONENT/$MODELNAME
export COMINcfs=/lfs/h2/emc/ptmp/$USER/stats/$COMPONENT/$MODELNAME
#export COMOUT=$COMIN/$STEP/$COMPONENT/$RUN.$VDATE
export COMOUT=/lfs/h2/emc/ptmp/$USER/$NET/$evs_ver/$STEP/$COMPONENT/$RUN.$VDATE


echo Actual output starts here

################################################
# Run the config file to set up model variables
################################################
. $PARMevs/evs_config/$COMPONENT/config.evs.$STEP

#######################################################################
# Execute the script.
#######################################################################
$HOMEevs/scripts/$COMPONENT/$STEP/exevs_${COMPONENT}_${STEP}.sh
export err=$?; err_chk

cat $pgmout

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

#if [ "$KEEPDATA" != "YES" ] ; then
  #cd $DATAROOT
  #rm -rf $DATA
#fi

#date

