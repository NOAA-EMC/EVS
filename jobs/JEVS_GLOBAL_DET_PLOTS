#!/bin/bash

########################################
# Preliminary data setup step
########################################
set -x

####################################
# SET SHELL PROCESSING VARIABLES
####################################
export PS4='$SECONDS + '
date

###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$
export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
mkdir -p $DATA
cd $DATA

####################################
# Set EVS directories
####################################
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs.${model_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}
export cartopyDataDir=${cartopyDataDir:-/apps/ops/prod/data/cartopy}

####################################
# Run setpdy and initialize PDY variables
####################################
export vhr=${vhr:-00}
export cycle=${cycle:-t${vhr}z}
export NDAYS=${NDAYS:-31}
setpdy.sh $NDAYS
. ./PDY
export VDATE_START=${VDATE_START:-$(eval echo \$PDYm$NDAYS)}
export VDATE_END=${VDATE_END:-$PDYm1}

####################################
# Set data directives
####################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDMAIL=${SENDMAIL:-NO}

####################################
# Define NET/RUN variables
####################################
export NET=${NET:-evs}
export STEP=${STEP:-plots}
export COMPONENT=${COMPONENT:-global_det}
export RUN=${RUN:-atmos}
export VERIF_CASE=${VERIF_CASE:-grid2grid}
export machine=${machine:-WCOSS2}
export evs_run_mode=${evs_run_mode:-production}

####################################
# Define COMIN/COMOUT variables
####################################
export COMIN=${COMIN:-$(compath.py $NET/$evs_ver)}
export COMINnohrsc=${COMINnohrsc:-$DCOMROOT}
export COMINcfs=${COMINcfs:-$COMIN/stats/$COMPONENT/cfs}
export COMINgfs=${COMINgfs:-$COMIN/stats/$COMPONENT/gfs}
export COMINcmc=${COMINcmc:-$COMIN/stats/$COMPONENT/cmc}
export COMINcmc_regional=${COMINcmc_regional:-$COMIN/stats/$COMPONENT/cmc_regional}
export COMINdwd=${COMINdwd:-$COMIN/stats/$COMPONENT/dwd}
export COMINecmwf=${COMINecmwf:-$COMIN/stats/$COMPONENT/ecmwf}
export COMINfnmoc=${COMINfnmoc:-$COMIN/stats/$COMPONENT/fnmoc}
export COMINimd=${COMINimd:-$COMIN/stats/$COMPONENT/imd}
export COMINjma=${COMINjma:-$COMIN/stats/$COMPONENT/jma}
export COMINmetfra=${COMINmetfra:-$COMIN/stats/$COMPONENT/metfra}
export COMINukmet=${COMINukmet:-$COMIN/stats/$COMPONENT/ukmet}
export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT/$RUN.$VDATE_END)}
mkdir -p $COMOUT
if [ $RUN = atmos ]; then
    mkdir -p $COMOUT/${VERIF_CASE}_${VERIF_TYPE}/last${NDAYS}days
elif [ $RUN = wave ]; then
    mkdir -p $COMOUT/$VERIF_CASE/last${NDAYS}days
fi
#######################################################################
# Execute the script
#######################################################################
env

if [ $RUN = headline ]; then
    $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_atmos_${RUN}_${STEP}.sh
else
    $HOMEevs/scripts/${STEP}/${COMPONENT}/exevs_${COMPONENT}_${RUN}_${VERIF_CASE}_${STEP}.sh
fi
export err=$?; err_chk

cat $pgmout

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$jlogfile" "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

date
