[dir]

OUTPUT_BASE = {ENV[DATA]}

ASCII2NC_INPUT_DIR = {ENV[DCOMIN]}
ASCII2NC_OUTPUT_DIR = {ENV[PREP_SAVE_DIR]}

LOG_DIR={OUTPUT_BASE}/logs

[config]

MODEL = {ENV[model1]}

PROCESS_LIST = ASCII2NC
LOOP_BY = VALID

ASCII2NC_CONFIG_FILE={PARM_BASE}/met_config/Ascii2NcConfig_wrapped

METPLUS_CONF = {OUTPUT_BASE}/conf/{MODEL}/metplus_hourly_ascii2nc.conf
LOG_METPLUS = {LOG_DIR}/{MODEL}/metplus_hourly_ascii2nc.log.{LOG_TIMESTAMP_TEMPLATE}

VALID_TIME_FMT = %Y%m%d%H

ASCII2NC_SKIP_IF_OUTPUT_EXISTS=False
# Used to control the lower bound of the window around the valid time
#     to determine if an ASCII2NC input file should be used for
#     processing. Overrides OBS_FILE_WINDOW_BEGIN
ASCII2NC_FILE_WINDOW_BEGIN= 0
# Used to control the upper bound of the window around the valid time
#     to determine if an ASCII2NC input file should be used for
#     processing. Overrides OBS_FILE_WINDOW_END.
ASCII2NC_FILE_WINDOW_END= 0
# Units are seconds. If the variable is not set, ASCII2NC will use OBS_WINDOW_BEGIN.
# ASCII2NC_WINDOW_BEGIN={ENV[VDATE]}{ENV[VHOUR]}00
# Units are seconds. If the variable is not set, ASCII2NC will use OBS_WINDOW_END.
# ASCII2NC_WINDOW_END={ENV[VDATE]}{ENV[VHOUR]}00
ASCII2NC_WINDOW_BEGIN=0
ASCII2NC_WINDOW_END=0
ASCII2NC_INPUT_FORMAT={ENV[HOURLY_ASCII2NC_FORMAT]}

VALID_BEG = {ENV[VDATE]}{ENV[VHOUR]}
VALID_END = {ENV[VDATE]}{ENV[VHOUR]}

OBS_WINDOW_BEGIN = 0
OBS_WINDOW_END = 0

[filename_templates]

ASCII2NC_INPUT_TEMPLATE={valid?fmt=%Y%m%d}/airnow/{ENV[HOURLY_INPUT_TYPE]}_{valid?fmt=%Y%m%d%H}.dat
ASCII2NC_OUTPUT_TEMPLATE=airnow_{ENV[HOURLY_OUTPUT_TYPE]}_{valid?fmt=%Y%m%d%H}.nc

[user_env_vars]
MET_AIRNOW_STATIONS={ENV[DCOMIN]}/{ENV[VDATE]}/airnow/Monitoring_Site_Locations_V2.dat
