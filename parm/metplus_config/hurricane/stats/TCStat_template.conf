#
[dir]
INPUT_BASE = INPUT_BASE_template
OUTPUT_BASE = OUTPUT_BASE_template
MET_INSTALL_DIR = METBASE_template
#  CONFIGURATION
#
[config]
#set looping method to processes-each 'task' in the process list runs to
# completion (for all init times) before the next 'task' is run
# List of 'tasks' to run
LOOP_ORDER = processes
PROCESS_LIST = TCStat

LOOP_BY = INIT

# The init time begin and end times, increment, and last init hour.
INIT_TIME_FMT = %Y%m%d%H
INIT_BEG = INIT_BEG_template
INIT_END = INIT_END_template

# This is the step-size. Increment in seconds from the begin time to the end time
# set to 6 hours = 21600 seconds
INIT_INCREMENT = 6H

#  DIRECTORIES
#
# TC-Stat input data (-lookin argument)
# uses output from tc-pairs
TC_STAT_LOOKIN_DIR = {OUTPUT_BASE}/tc_pairs

# TC-Stat output data (creates .tcst ASCII files which can be read or used as
# input to TCMPR_Plotter_wrapper (the Python wrapper to plot_tcmpr.R) to create plots.
TC_STAT_OUTPUT_DIR = {OUTPUT_BASE}/tc_stat
TC_STAT_OUTPUT_TEMPLATE = tc_stat.out

# Leave blank or remove to use wrapped config file in parm/met_config
TC_STAT_CONFIG_FILE = {PARM_BASE}/met_config/TCStatConfig_wrapped

TC_STAT_JOB_ARGS = -job summary LEAD_template -line_type TCMPR -match_points true -event_equal true -column AMAX_WIND-BMAX_WIND -column ABS(AMAX_WIND-BMAX_WIND) -column ALTK_ERR -column CRTK_ERR -column ABS(TK_ERR) -by LEAD -by AMODEL -out_alpha 0.05000 -dump_row {TC_STAT_OUTPUT_DIR}/tc_stat_summary.tcst
# 5-days' statistics
#TC_STAT_JOB_ARGS = -job summary -lead 000000 -lead 120000 -lead 240000 -lead 360000 -lead 480000 -lead 600000 -lead 720000 -lead 840000 -lead 960000 -lead 1080000 -lead 1200000 -line_type TCMPR -match_points true -event_equal true -column AMAX_WIND-BMAX_WIND -column ABS(AMAX_WIND-BMAX_WIND) -column ALTK_ERR -column CRTK_ERR -column ABS(TK_ERR) -by LEAD -by AMODEL -out_alpha 0.05000 -dump_row {TC_STAT_OUTPUT_DIR}/tc_stat_summary.tcst
# 7-days' statistics
#TC_STAT_JOB_ARGS = -job summary -lead 000000 -lead 120000 -lead 240000 -lead 360000 -lead 480000 -lead 600000 -lead 720000 -lead 840000 -lead 960000 -lead 1080000 -lead 1200000 -lead 1320000 -lead 1440000 -lead 1560000 -lead 1680000 -line_type TCMPR -match_points true -event_equal true -column AMAX_WIND-BMAX_WIND -column ABS(AMAX_WIND-BMAX_WIND) -column ALTK_ERR -column CRTK_ERR -column ABS(TK_ERR) -by LEAD -by AMODEL -out_alpha 0.05000 -dump_row {TC_STAT_OUTPUT_DIR}/tc_stat_summary.tcst

#
#The line_type field stratifies by the line_type column.
TC_STAT_LINE_TYPE = TCMPR
#
# Stratify by these columns:
TC_STAT_AMODEL = MODELLIST_template
TC_STAT_BMODEL = BEST
TC_STAT_DESC =
TC_STAT_STORM_ID =
TC_STAT_BASIN =
TC_STAT_CYCLONE =
TC_STAT_STORM_NAME =
#
# # Stratify by init times via a comma-separate list of init times to
# # include or exclude.  Time format defined as YYYYMMDD_HH or YYYYMMDD_HHmmss
TC_STAT_INIT_BEG = TC_STAT_INIT_BEG_temp
TC_STAT_INIT_END = TC_STAT_INIT_END_temp
TC_STAT_INIT_INCLUDE =
TC_STAT_INIT_EXCLUDE =
TC_STAT_INIT_HOUR = 
#
# # Stratify by valid times via a comma-separate list of valid times to
# # include or exclude.  Time format defined as YYYYMMDD_HH or YYYYMMDD_HHmmss
TC_STAT_VALID_BEG =
TC_STAT_VALID_END =
TC_STAT_VALID_INCLUDE =
TC_STAT_VALID_EXCLUDE =
TC_STAT_VALID_HOUR =
TC_STAT_LEAD_REQ =
TC_STAT_INIT_MASK =
TC_STAT_VALID_MASK =

# Stratify by the valid time and lead time via comma-separated list of
# # times in format HH[MMSS]
TC_STAT_VALID_HOUR =
TC_STAT_LEAD =
#
# # Stratify over the watch_warn column in the tcst file.  Setting this to
# # 'ALL' will match HUWARN, HUWATCH, TSWARN, TSWATCH
TC_STAT_TRACK_WATCH_WARN =
#
# # Stratify by applying thresholds to numeric data columns.  Specify with
# # comma-separated list of column names and thresholds to be applied.
# # The length of TC_STAT_COLUMN_THRESH_NAME should be the same as
# # TC_STAT_COLUMN_THRESH_VAL.
TC_STAT_COLUMN_THRESH_NAME =
TC_STAT_COLUMN_THRESH_VAL =
#
# # Stratify by a list of comma-separated columns names and values corresponding
# # to non-numeric data columns of the values of interest.
TC_STAT_COLUMN_STR_NAME = LEVEL,LEVEL,LEVEL,LEVEL,LEVEL,LEVEL,LEVEL
TC_STAT_COLUMN_STR_VAL = TY,TC,HU,SD,SS,TS,TD

# # Stratify by applying thresholds to numeric data columns only when lead=0.
# # If lead=0 and the value does not meet the threshold, discard the entire
# # track.  The length of TC_STAT_INIT_THRESH_NAME must equal the length of
# # TC_STAT_INIT_THRESH_VAL.
TC_STAT_INIT_THRESH_NAME =
TC_STAT_INIT_THRESH_VAL =

# Stratify by applying thresholds to numeric data columns only when lead = 0.
# # If lead = 0 but the value doesn't meet the threshold, discard the entire
# # track.
TC_STAT_INIT_STR_NAME =
TC_STAT_INIT_STR_VAL =
#
# # Excludes any points where distance to land is <=0. When set to TRUE, once land
# # is encountered, the remainder of the forecast track is NOT used for the
# # verification, even if the track moves back over water.
TC_STAT_WATER_ONLY = FALSE
#
# # TRUE or FALSE.  To specify whether only those track points occurring near
# # landfall should be retained. Landfall is the last bmodel track point before
# # the distance to land switches from water to land.
TC_STAT_LANDFALL =
#
# # Define the landfall retention window, which is defined as the hours offset
# # from the time of landfall. Format is in HH[MMSS]. Default TC_STAT_LANDFALL_BEG
# # is set to -24, and TC_STAT_LANDFALL_END is set to 00
TC_STAT_LANDFALL_BEG = -24
TC_STAT_LANDFALL_END = 00
#
# # Specify whether only those track points common to both the ADECK and BDECK
# # tracks should be written out
TC_STAT_MATCH_POINTS = true

#TC_STAT_COLUMN_STR_EXC_NAME =
##TC_STAT_COLUMN_STR_EXC_VAL =
#
##TC_STAT_INIT_STR_EXC_NAME =
##TC_STAT_INIT_STR_EXC_VAL =
#
## IMPORTANT  Refer to the README_TC for details on setting up analysis
## jobs (located in {MET_INSTALL_DIR}/share/met/config

