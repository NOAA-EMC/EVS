# PrepBufr to NetCDF Configurations

# section heading for [config] variables - all items below this line and
# before the next section heading correspond to the [config] section
[config]

OUTPUT_BASE = {ENV[output_base]}
LOG_LINE_FORMAT =


# List of applications to run - only PB2NC for this case
PROCESS_LIST = PB2NC

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = VALID

# Format of VALID_BEG and VALID_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# %Y%m%d%H expands to YYYYMMDDHH
VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match VALID_TIME_FMT
VALID_BEG = {ENV[vday]}{ENV[vbeg]}

# End time for METplus run - must match VALID_TIME_FMT
VALID_END = {ENV[vday]}{ENV[vbeg]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
VALID_INCREMENT = 1M

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = 0

# list of offsets in the prepBUFR input filenames to allow. List is in order of preference
# i.e. if 12, 6 is listed, it will try to use a 12 offset file and then try to use a 6 offset
# if the 12 does not exist
#PB2NC_OFFSETS = 12

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = processes

# Location of MET config file to pass to PB2NC
# References CONFIG_DIR from the [dir] section
PB2NC_CONFIG_FILE = {METPLUS_BASE}/parm/met_config/PB2NCConfig_wrapped

# If set to True, skip run if the output file determined by the output directory and
# filename template already exists
PB2NC_SKIP_IF_OUTPUT_EXISTS = True

# Time relative to each input file's valid time (in seconds if no units are specified) for data within the file to be
# considered valid. Values are set in the 'obs_window' dictionary in the PB2NC config file
PB2NC_WINDOW_BEGIN = -1800
PB2NC_WINDOW_END = 1800

# controls the window of time around the current run time to be considered to be valid for all
# input files, not just relative to each input files valid time
# if set, these values are substituted with the times from the current run time and passed to
# PB2NC on the command line with -valid_beg and -valid_end arguments.
# Not used if unset or set to an empty string

##PB2NC_VALID_BEGIN = {valid?fmt=%Y%m%d_%H}
##PB2NC_VALID_END = {valid?fmt=%Y%m%d_%H?shift=1d}

# Values to pass to pb2nc config file using environment variables of the same name.
# See MET User's Guide for more information
PB2NC_GRID = G003
PB2NC_POLY =
PB2NC_STATION_ID =
#PB2NC_MESSAGE_TYPE = ADPUPA, ADPSFC, SFCSHP
PB2NC_MESSAGE_TYPE = 

#PB2NC_PB_REPORT_TYPE = 120, 220, 221, 122, 222, 223, 224, 131, 133, 233, 153, 156, 157, 180, 280, 181, 182, 281, 282, 183, 284, 187, 287

PB2NC_LEVEL_RANGE_BEG =  -1000
PB2NC_LEVEL_RANGE_END = 100000

#PB2NC_LEVEL_CATEGORY = 0, 1, 4, 5, 6

PB2NC_QUALITY_MARK_THRESH = 9

# Leave empty to process all

PB2NC_OBS_BUFR_VAR_LIST = UOB, VOB, TOB, TDO, D_CAPE, D_RH, HOVI, TOCC, CEILING, PMO

#Note, there must be no space between " and ; 
#George: In MET version 10.1.0 the variable obs_prefbufr_map was renamed to obs_prepbufr_map to fix a typo (pref to prep). Typically obs_bufr_map is set by users and obs_prepbufr_map is not modified, so I would recommend removing obs_prefbufr_map from PB2NC_MET_CONFIG_OVERRIDES and instead set:
#
#PB2NC_OBS_BUFR_MAP = { key = "ZOB"; val = "HGT"; }, ..... { key = "PMO"; val = "PRMSL"; } ...
#
#That should change the PB2NC output field to PRMSL so you can change the OBS_VAR1_NAME back to PRMSL.
#
# See https://github.com/dtcenter/METplus/discussions/1700
#
# For defining the time periods for summarization
PB2NC_OBS_BUFR_MAP = { key = "TOB"; val = "TMP"; }, { key = "UOB"; val = "UGRD"; }, { key = "VOB"; val = "VGRD"; }, { key = "D_RH"; val = "RH"; }, { key = "PMO"; val = "PRMSL"; }, { key = "D_CAPE"; val = "CAPE"; }, { key = "TDO"; val = "DPT"; }, { key = "TOCC"; val = "TCDC"; }, { key = "HOVI"; val = "VIS"; }, { key = "CEILING"; val = "HGT"; }; 

#PB2NC_TIME_SUMMARY_FLAG = False
#PB2NC_TIME_SUMMARY_BEG = 000000
#PB2NC_TIME_SUMMARY_END = 235959
#PB2NC_TIME_SUMMARY_VAR_NAMES =
#PB2NC_TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p80

#PB2NC_TIME_SUMMARY_RAW_DATA = False
#PB2NC_TIME_SUMMARY_STEP = 3600
#PB2NC_TIME_SUMMARY_WIDTH = 3600
#PB2NC_TIME_SUMMARY_GRIB_CODES =
#PB2NC_TIME_SUMMARY_VALID_FREQ = 0
#PB2NC_TIME_SUMMARY_VALID_THRESH = 0.0

# End of [config] section and start of [dir] section
[dir]
# location of configuration files used by MET applications
CONFIG_DIR = {PARM_BASE}/met_config

# directory containing input to PB2NC
PB2NC_INPUT_DIR = {ENV[COMINobsproc]}

# directory to write output from PB2NC
PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/prepbufr_nc
METPLUS_CONF = {OUTPUT_BASE}/final_pb2nc_{ENV[vbeg]}.conf

# End of [dir] section and start of [filename_templates] section
[filename_templates]
# Template to look for forecast input to PB2NC relative to PB2NC_INPUT_DIR
PB2NC_INPUT_TEMPLATE = gdas.{da_init?fmt=%Y%m%d}/{da_init?fmt=%H}/atmos/gdas.t{da_init?fmt=%H}z.prepbufr

# Template to use to write output from PB2NC
PB2NC_OUTPUT_TEMPLATE = gfs.t{da_init?fmt=%H}z.prepbufr.f00.nc
