# ASCII to NetCDF Configurations

# section heading for [config] variables - all items below this line and
# before the next section heading correspond to the [config] section
[config]

INPUT_BASE = {ENV[DATA]}/gdas_cnvstat
OUTPUT_BASE = {ENV[DATA]}
TMP_DIR = {OUTPUT_BASE}/tmp
LOG_DIR = {OUTPUT_BASE}/logs
METPLUS_CONF = {ENV[DATA]}/confs/{ENV[JOB_GROUP]}_ASCII2NC_obsCNVSTAT_for{VALID_BEG}_runon{CLOCK_TIME}.conf
LOG_METPLUS = {LOG_DIR}/{ENV[JOB_GROUP]}_ASCII2NC_obsCNVSTAT_for{VALID_BEG}_runon{CLOCK_TIME}.log

# List of applications to run - only ASCII2NC for this case
PROCESS_LIST = ASCII2NC

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = VALID

# Format of VALID_BEG and VALID_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# %Y%m%d%H expands to YYYYMMDDHH
VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match VALID_TIME_FMT
VALID_BEG = {ENV[valid_date]}

# End time for METplus run - must match VALID_TIME_FMT
VALID_END = {ENV[valid_date]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
# these will be the output files times too
VALID_INCREMENT = 24H

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = 0
INIT_SEQ =

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = times

# Location of MET config file to pass to ASCII2NC
ASCII2NC_CONFIG_FILE = {PARM_BASE}/met_config/Ascii2NcConfig_wrapped

# If set to True, skip run if the output file determined by the output directory and
# filename template already exists
ASCII2NC_SKIP_IF_OUTPUT_EXISTS = True

ASCII2NC_INPUT_DIR = {INPUT_BASE}
ASCII2NC_INPUT_TEMPLATE = gdas_cnvstat_{valid?fmt=%Y%m%d%H}.txt
ASCII2NC_OUTPUT_DIR = {OUTPUT_BASE}
ASCII2NC_OUTPUT_TEMPLATE = {ENV[RUN]}.{valid?fmt=%Y%m%d}/{ENV[MODELNAME]}/{ENV[VERIF_CASE]}/ascii2nc_gdas_cnvstat_{valid?fmt=%Y%m%d%H}.nc
ASCII2NC_FILE_WINDOW_BEGIN = 0
ASCII2NC_FILE_WINDOW_END = 0
OBS_WINDOW_BEGIN = 86400
OBS_WINDOW_END = -86400
ASCII2NC_WINDOW_BEGIN = 86400
ASCII2NC_WINDOW_END = -86400
ASCII2NC_INPUT_FORMAT = met_point
ASCII2NC_MASK_GRID =
ASCII2NC_MASK_POLY =
ASCII2NC_MASK_SID =
ASCII2NC_TIME_SUMMARY_FLAG = False
ASCII2NC_TIME_SUMMARY_RAW_DATA = False
ASCII2NC_TIME_SUMMARY_BEG = 000000
ASCII2NC_TIME_SUMMARY_END = 235959
ASCII2NC_TIME_SUMMARY_STEP = 300
ASCII2NC_TIME_SUMMARY_WIDTH = 600
ASCII2NC_TIME_SUMMARY_GRIB_CODES = 11, 204, 211
ASCII2NC_TIME_SUMMARY_VAR_NAMES =
ASCII2NC_TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p95
ASCII2NC_TIME_SUMMARY_VALID_FREQ = 0
ASCII2NC_TIME_SUMMARY_VALID_THRESH = 0.0
