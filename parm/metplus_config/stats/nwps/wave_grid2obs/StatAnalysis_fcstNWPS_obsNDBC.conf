# StatAnalysis METplus Configuration
[config]

#### Input
INPUT_BASE = {ENV[DATA]}/all_stats
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {INPUT_BASE}

#### Output
OUTPUT_BASE = {ENV[DATA]}
LOG_DIR = {OUTPUT_BASE}/logs
TMP_DIR = {OUTPUT_BASE}/tmp
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stats

## this is the output file!

MODEL1_STAT_ANALYSIS_DUMP_ROW_TEMPLATE = evs.stats.{ENV[MODELNAME]}.{ENV[RUN]}.{ENV[VERIF_CASE]}.v{ENV[VDATE]}.stat

LOG_METPLUS = {LOG_DIR}/StatAnalysis_fcst{MODEL1}_{ENV[VERIF_CASE]}_{ENV[STEP]}_for{VALID_BEG}.log
METPLUS_CONF = {ENV[DATA]}/confs/StatAnalysis_fcst{MODEL1}_{ENV[VERIF_CASE]}_{ENV[STEP]}_for{VALID_BEG}.conf

### METplus application
PROCESS_LIST = StatAnalysis

LOOP_BY = VALID

#VALID_TIME_FMT = %Y%m%d%H
#VALID_BEG = {ENV[VDATE]}{ENV[vbeg]}
#VALID_END = {ENV[VDATE]}{ENV[vend]}
#VALID_INCREMENT = 6H
#LEAD_SEQ = begin_end_incr(0,384,6)

## using these ran, but the output was a blank file
VALID_TIME_FMT = %Y%m%d
VALID_BEG = {ENV[VDATE]}
VALID_END = {ENV[VDATE]}
VALID_INCREMENT = 24H

# Models to process
# MODELn is the model name to filter for in
#           stat files [required]
# MODELn_OBTYPE is the observation name
#               to filter for the .stat files
#               [required]
# MODELn_STAT_ANALYSIS_LOOKIN_DIR is the directory to search for
#                                 the .stat files in, wildcards (*)
#                                 are okay to search for multiple
#                                 directories and templates like
#                                 {valid?fmt=%Y%m%d%H%M%S} [required]
# MODELn_REFERENCE_NAME is a reference name for MODELn, defaults to
#                       MODELn, it can be used in the file template names
#                       [optional]

# OUTPUT_BASE = {ENV[DATA]} is defined in machine.conf
# INPUT_BASE is undefined

MODEL1 = {ENV[MODNAM]}
MODEL1_OBTYPE = {MODEL1}
#MODEL1_OBTYPE = SFCSHP, ADPSFC
MODEL1_REFERENCE_NAME = {MODEL1}

### StatAnalysis
STAT_ANALYSIS_MET_CONFIG_OVERRIDES = obtype = [];
#STAT_ANALYSIS_MET_CONFIG_OVERRIDES = obtype = ["SFCSHP","ADPSFC"];

# Location of MET config file to pass to StatAnalysis
STAT_ANALYSIS_CONFIG_FILE = {ENV[METPLUS_PATH]}/parm/met_config/STATAnalysisConfig_wrapped

STAT_ANALYSIS_JOB_NAME = filter

# if using -dump_row, put in JOBS_ARGS "-dump_row [dump_row_file]"
# if using -out_stat, put in JOBS_ARGS "-out_stat [out_stat_file]"
# METplus will fill in filename
STAT_ANALYSIS_JOB_ARGS = -dump_row [dump_row_file]

# Optional variables for further filtering
# can be blank, single, or multiple values
# if more than one use comma separated list
# (FCST)(OBS)_(VALID)(INIT)_HOUR_LIST: HH format (ex. 00, 06, 12)
# (FCST)(OBS)_LEAD_LIST: HH[H][MMSS] format (ex. 00, 06, 120)
MODEL_LIST = {MODEL1}
DESC_LIST =
FCST_LEAD_LIST =
OBS_LEAD_LIST =
FCST_VALID_HOUR_LIST =
FCST_INIT_HOUR_LIST =
OBS_VALID_HOUR_LIST =
OBS_INIT_HOUR_LIST =
FCST_VAR_LIST =
OBS_VAR_LIST =
FCST_UNITS_LIST =
OBS_UNITS_LIST =
FCST_LEVEL_LIST =
OBS_LEVEL_LIST =
VX_MASK_LIST =
INTERP_MTHD_LIST =
INTERP_PNTS_LIST =
FCST_THRESH_LIST =
OBS_THRESH_LIST =
COV_THRESH_LIST =
ALPHA_LIST =
LINE_TYPE_LIST = CTC, CTS, CNT, SL1L2, SAL1L2

# how to treat items listed in above _LIST variables
# GROUP_LIST_ITEMS: items listed in a given _LIST variable
#                   will be grouped together
# LOOP_LIST_ITEMS:  items listed in a give _LIST variable
#                   will be looped over
# if not listed METplus will treat the list as a group
GROUP_LIST_ITEMS = LINE_TYPE_LIST
LOOP_LIST_ITEMS = MODEL_LIST
