[dir]
METPLUS_BASE = {ENV[MET_PLUS_PATH]}
MET_INSTALL_DIR = {ENV[MET_PATH]}
MET_BIN_DIR = {ENV[MET_PATH]}/bin
METPLUS_PARM_BASE = {ENV[MET_PLUS_CONF]}

INPUT_BASE = {ENV[COMINfcst]}
OUTPUT_BASE = {ENV[MET_PLUS_OUT]}/{ENV[VERIF_TYPE]}/pcp_combine
CONFIG_DIR = {ENV[MET_CONFIG]}
LOG_DIR = {OUTPUT_BASE}/logs
TMP_DIR = {OUTPUT_BASE}/tmp

FCST_PCP_COMBINE_INPUT_DIR = {INPUT_BASE}
FCST_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}

[filename_templates]
FCST_PCP_COMBINE_INPUT_TEMPLATE = {ENV[MODEL_INPUT_TEMPLATE]}
FCST_PCP_COMBINE_OUTPUT_TEMPLATE = {MODEL}.init{init?fmt=%Y%m%d}/{MODEL}.{ENV[FCST_VAR_NAME]}.t{init?fmt=%H}z.f{lead?fmt=%HHH}.a{level?fmt=%HH}h.{ENV[NEST]}.nc

[config]
LOG_LEVEL = {ENV[METPLUS_VERBOSITY]}
LOG_MET_VERBOSITY = {ENV[MET_VERBOSITY]}
LOG_PCP_COMBINE_VERBOSITY = {LOG_MET_VERBOSITY}
LOG_MET_OUTPUT_TO_METPLUS = {ENV[LOG_MET_OUTPUT_TO_METPLUS]}
LOG_TIMESTAMP_TEMPLATE = %Y%m%d%H%M%S
LOG_TIMESTAMP_USE_DATATIME = no
LOG_LINE_FORMAT = %(asctime)s.%(msecs)03d %(name)s (%(filename)s:%(lineno)d) %(levelname)s: %(message)s
LOG_ERR_LINE_FORMAT = {LOG_LINE_FORMAT}
LOG_DEBUG_LINE_FORMAT = {LOG_LINE_FORMAT}
LOG_INFO_LINE_FORMAT = %(asctime)s.%(msecs)03d %(name)s %(levelname)s: %(message)s
LOG_LINE_DATE_FORMAT = %m/%d %H:%M:%S
LOG_METPLUS = {LOG_DIR}/PCPCombine_fcst{MODEL}_{ENV[VERIF_CASE]}_{ENV[VERIF_TYPE]}_{ENV[job_name]}_for{ENV[VDATE]}{ENV[VHOUR]}_runon{CLOCK_TIME}.log
METPLUS_CONF = {OUTPUT_BASE}/confs/PCPCombine_fcst{MODEL}_{ENV[VERIF_CASE]}_{ENV[VERIF_TYPE]}_{ENV[job_name]}_for{ENV[VDATE]}{ENV[VHOUR]}_runon{CLOCK_TIME}.conf

MODEL = {ENV[MODELNAME]}

PROCESS_LIST = PCPCombine
FCST_PCP_COMBINE_RUN = True
FCST_PCP_COMBINE_METHOD = {ENV[MODEL_PCP_COMBINE_METHOD]}
FCST_PCP_COMBINE_COMMAND = {ENV[MODEL_PCP_COMBINE_COMMAND]}
FCST_PCP_COMBINE_INPUT_NAMES = {ENV[FCST_VAR_NAME]}
FCST_PCP_COMBINE_OUTPUT_NAME = {FCST_PCP_COMBINE_INPUT_NAMES}_A{ENV[ACC]}
FCST_PCP_COMBINE_INPUT_LEVELS = Z0
FCST_PCP_COMBINE_INPUT_ACCUMS = {lead}
FCST_PCP_COMBINE_IS_DAILY_FILE = False 
FCST_PCP_COMBINE_OUTPUT_ACCUM = {ENV[ACC]}
FCST_PCP_COMBINE_INPUT_DATATYPE = GRIB
FCST_PCP_COMBINE_MIN_FORECAST = {ENV[FHR_START]}
FCST_PCP_COMBINE_MAX_FORECAST = {ENV[FHR_END]}
FCST_PCP_COMBINE_BUCKET_INTERVAL = {ENV[BUCKET_INTERVAL]}H
FCST_PCP_COMBINE_CONSTANT_INIT = True
FCST_PCP_COMBINE_USE_ZERO_ACCUM = True
FCST_PCP_COMBINE_LOOKBACK =
FCST_PCP_COMBINE_OUTPUT_NAME = {ENV[FCST_VAR_NAME]}_{ENV[ACC]}
FCST_PCP_COMBINE_STAT_LIST = 
FCST_IS_PROB = False
OBS_PCP_COMBINE_RUN = False
PCP_COMBINE_SKIP_IF_OUTPUT_EXISTS = True
PCP_COMBINE_SKIP_TIMES =
PCP_COMBINE_MANDATORY = True

LOOP_BY = VALID
LOOP_ORDER = times
VALID_TIME_FMT = %Y%m%d%H
VALID_BEG = {ENV[VDATE]}{ENV[VHOUR]}
VALID_END = {ENV[VDATE]}{ENV[VHOUR]}
VALID_INCREMENT = 24H
SKIP_TIMES =
LEAD_SEQ = begin_end_incr({ENV[FHR_START]},{ENV[FHR_END]},{ENV[FHR_INCR]})

INPUT_MUST_EXIST = True
USER_SHELL = bash
DO_NOT_RUN_EXE =

