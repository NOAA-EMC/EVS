#PBS -N evs_cam_hireswarwmem2_severe_prep_vhr_%VHR%
#PBS -j oe
#PBS -S /bin/bash
#PBS -q %QUEUE%
#PBS -A %PROJ%-%PROJENVIR%
#PBS -l walltime=0:30:00
#PBS -l place=shared,select=1:ncpus=1:mem=40GB
#PBS -l debug=true

export model=evs
%include <head.h>
%include <envir-p1.h>

############################################################
# Load modules
############################################################
set -x
export COMPONENT=cam
export STEP=prep

module load PrgEnv-intel/${PrgEnvintel_ver}
module load intel/${intel_ver}
module load ve/evs/${ve_evs_ver}
module load cray-mpich/${craympich_ver}
module load cray-pals/${craypals_ver}
module load cfp/${cfp_ver}
module load libjpeg/${libjpeg_ver}
module load libpng/${libpng_ver}
module load zlib/${zlib_ver}
module load jasper/${jasper_ver}
module load udunits/${udunits_ver}
module load gsl/${gsl_ver}
module load netcdf/${netcdf_ver}
module load nco/${nco_ver}
module load prod_util/${prod_util_ver}
module load cdo/${cdo_ver}
module load grib_util/${grib_util_ver}
module load wgrib2/${wgrib2_ver}
module load met/${met_ver}
module load metplus/${metplus_ver}
module list

############################################################
# Specify environment variables
############################################################
if [ -n "%VHR:%" ]; then
  export vhr=${vhr:-%VHR:%}
else
  export vhr=00
fi
export NET=evs
export RUN=atmos
export VERIF_CASE=severe
export MODELNAME=hireswarwmem2
export modsys=hiresw
export COMIN=${COMevs}
export COMOUT=${COMevs}/${STEP}/${COMPONENT}
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
export DATA=${DATA:-${DATAROOT}/${jobid:?}}
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDMAIL=${SENDMAIL:-YES}

############################################################
# Execute j-job
############################################################
$HOMEevs/jobs/JEVS_CAM_PREP
if [ $? -ne 0 ]; then
   ecflow_client --msg="***JOB ${ECF_NAME} ERROR RUNNING J-SCRIPT ***"
   ecflow_client --abort
   exit
fi

%include <tail.h>
%manual
%end
